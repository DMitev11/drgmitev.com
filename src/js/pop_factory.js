
const PopSectionData =  {
    bithotel: {
        banner: "https://www.youtube.com/embed/CJmrsUfoLi4",
        title: 'Bit Hotel',
        role: "Full Stack Developer | Game Developer",
        link: {text: "Play.Bithotel.IO", link: "https://play.bithotel.io"},
        description: "Bit Hotel is a social-first pixel-art game, in which users can hang out, compete for leaderboard rewards and earn income.",
        tasks: [
            {title: "Trading System",
             description: 
             "Blockchain-based trading system, incorporating ERC20 and ERC721 transfers, utilizing an escrow contract (audited by Solidity Finance). I developed the feature from its 'Figma' design to its current stable state"},
            {title: "Wallet Integration", description: "Updated and implemented a WalletConnectV2-based blockchain wallet integration, supporting desktop and mobile"},
            {title: "Rocket Crash", description: "'Crash'-based game"},
            {title: "Onboarding", description: "Interactive player onboarding, following the basics of its game environment"},
            {title: "More", description: "..."}
        ]
    },
    audi: {
        banner: "../assets/img/audi_background.avif",
        title: 'Audi Bulgaria, Christmas NFT Collection',
        role: "Full Stack Developer",
        link: {text: "OpenSea", link: "https://opensea.io/AudiBulgaria"},
        description: "A Christmas 2022 NFT collection, utilizing META transactions allowing users to mint transaction-free",
        tasks: [
            {title: "Smart Contract Development", description: "Factory for randomized ERC721 NFTs, based on a pool of images"},
            {title: "Blockchain Integration", description: "Integration between an on-chain contracts and off-chain relayers to pay for users's minting requests."},
            {title: "API Development", description: "Develop, implement and integrate API to utilize all the above functionality, through a set of verbose interface methods"},
        ]
    },
    pigletz: {
        banner: "https://www.youtube.com/embed/kzdDbAKmmow",
        title: 'Pigletz',
        role: "Smart Contract Developer",
        link: {text: "Pigletz.com", link: "https://pigletz.com"},
        description: "NFT, that materializes. Utilized as a vault, you can safely store your ERC20s and ERC721s, while mining PiFi token.",
        tasks: [
            {title: "Mystery Box", description: "On-chain proxy-like contracts. A raffle winner can use this contract to call and retrieve a new 'Piglet', via an ECDSA signature generated by an oracle."}, 
        ]
    },
    befaster: {
        banner: "https://www.youtube.com/embed/4ENWDrWJ_ik",
        title: 'BeFaster',
        role: "Lead Blockchain Developer",
        link: {text: "BeFaster.Fit", link: "https://befaster.fit"},
        description: "Blockchain-based 'Run to Win' App and Protocol",
        tasks: [
            {title: "Smart Contract Development", description: "Design and develop protocol ideas to an eco-system; Develop, Test and Deploy - L1-to-L1 Token Bridge, Staking, Vault and more."},
            {title: "Blockchain Integration", description: "E2E blockchain intergration. Off-chain oracles' and 3rd Party API integration to produce interactable environment for the end-user."},
            {title: "API Development", description: "Neatly pack all of the above functionality into a concise and clear API."}
        ]
    },
    tivoros: {
        banner: "../assets/img/tivoros-1_background.png",
        title: 'Tivoros-1',
        role: "Game Developer",
        link: {text: "Tivoros.com", link: "https://www.tivoros.com/"},
        description: "Fast-Paced Multiplayer Math Game",
        tasks: [
            {title: "Math Generation", description: "Custom scripting syntax generating text and parameterized math equations, and questions, with randomized 1:4 answers"},
            {title: "Multiplayer Development", description: "Implement realtime lobby and gameplay management integrating PVP gameplayer"},
            {title: "PVP", description: "Implement a concept design to an actual gameplay"}
        ]
    },
    last_resort: {
        banner: "https://www.youtube.com/embed/ejPTK7T9AUk",
        title: 'University Project: Last Resort',
        role: "Gameplay Programmer",
        link: {text: "Steam", link: "https://store.steampowered.com/app/1491650/Last_Resort/"},
        description: "Co-op Shooter",
        tasks: [
            {title: "Dynamic Camera System", description: "Design and develop in-game camera, responding in realtime to player's actions and environmental changes "},
            {title: "Task and Quest System", description: "Design and develop task system, to incorporate objectives and mini-tasks during an in-game 'run'."},
            {title: "More", description: "..."}
        ]
    },
    parallel: {
        banner: "https://www.youtube.com/embed/GoCahCyDuNA",
        title: 'University Project: Parallel',
        role: "Programming Lead, Gameplay Programmer",
        link: {text: "Itch.io", link: "https://buas.itch.io/runningoutontime"},
        description: "A futuristic racing game. Show off your racing skills with our unique double thruster controls.",
        tasks: [
            {title: "Hovercraft Movement", description: "Design and develop hovercraft movement, utilizing realtime physics calculations."},
            {title: "Dynamic Camera", description: "Design and develop a responsive in-game camera, producing the in-game's feel of speed and agility."},
            {title: "Lead", description: "Lead a small team of 5 programmers (including myself) to produce design-first features and gameplay, utilizing Agile methodologies."}
        ]
    },
}
class PopSectionFactory{
    static generateNode (id) { 
        const data = PopSectionData[id]; 

        const wrapper = document.createElement('div');
        wrapper.classList.add("wrapper");

        const inner = document.createElement('div');
        inner.classList.add("inner");

        let banner;
        if(data['banner'].includes('https://')){ 
            banner = document.createElement('iframe'); 
            banner.setAttribute('src', data['banner']);
        } else {
            banner = document.createElement('img');
            banner.setAttribute('src', data['banner']);
        }
        banner.classList.add('banner');
        
        const content = document.createElement('div');
        content.classList.add('content');

        const title = document.createElement('h2');
        title.classList.add('mb-3')
        title.classList.add("title");
        title.appendChild(document.createTextNode(data.title));

        const role = document.createElement('h4');
        role.classList.add('mb-1') 
        role.appendChild(document.createTextNode("Role: " + data.role));

        const link = document.createElement('a');
        link.setAttribute('href', data.link.link)
        link.appendChild(document.createTextNode(`Link: ${data.link.text}`));

        const description = document.createElement('p');
        description.classList.add('mt-4')  
        description.classList.add('mb-2')
        description.classList.add('description');
        description.appendChild(document.createTextNode(data.description));

        const tasks = document.createElement('div'); 
        const task_title = document.createElement('h4'); 
        task_title.appendChild(document.createTextNode("Tasks: "));  
        tasks.appendChild(task_title);

        const tasks_list = document.createElement('ul'); 
        data['tasks'].forEach(task => {
            const task_el = document.createElement('li');  
            task_el.classList.add('mb-3');
            const title = document.createElement('h5');
            title.appendChild(document.createTextNode(task.title))
            const description = document.createElement("span");
            description.appendChild(document.createTextNode(task.description))
            task_el.appendChild(title)
            task_el.appendChild(description);
            tasks_list.appendChild(task_el);
        });

        tasks.appendChild(tasks_list);
        content.appendChild(title);
        content.appendChild(role);
        content.appendChild(link);
        content.appendChild(description);
        content.appendChild(tasks);
        inner.appendChild(banner);
        inner.appendChild(content);
        wrapper.appendChild(inner);

        return wrapper;
    }
} 